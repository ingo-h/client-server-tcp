name: Integration tests

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

jobs:
  # Job: Check clang format
  # -----------------------
  clang:
    name: Check clang format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: '.'
        extensions: 'cpp,hpp'
        clangFormatVersion: 11.1.0


  # Job: Configure, build and test Ubuntu
  # -------------------------------------
  Build_Ubuntu:
    name: Test Ubuntu
    needs: [ clang ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        buildtype: [ 'Release', 'Debug' ]
      fail-fast: false

    steps:
    # Step building client/server
      - uses: actions/checkout@v3

      - name: Configure
        run: >
          cmake
          -S .
          -B build
          --log-level=DEBUG
          -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}
          -D GOOGLETEST=ON

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - name: Run gtests
        run: |
          cd ./build
          ctest --timeout 2 --verbose


  # Job: Configure, build and test MacOS
  #-------------------------------------
  Build_MacOS:
    name: Test MacOS
    needs: [ clang ]
    runs-on: macOS-latest

    strategy:
      matrix:
        buildtype: [ 'Release', 'Debug' ]
      fail-fast: false

    steps:
    # Step building client/server
      - uses: actions/checkout@v3

      - name: Configure
        run: >
          cmake
          -S .
          -B build
          --log-level=DEBUG
          -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}
          -D GOOGLETEST=ON

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - name: Run gtests
        run: |
          cd ./build
          ctest --timeout 2 --verbose


  # Job: Configure, build and test with Visual Studio
  #--------------------------------------------------
  Build_with_Visual_Studio:
    name: Test w/ VS
    needs: [ clang ]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        buildtype: [ 'Release', 'Debug' ]
        os: [ windows-2019, windows-2022 ]
      fail-fast: false

    steps:
    # Step building client/server
      - uses: actions/checkout@v3

      - if: matrix.os == 'windows-2019'
        # need developer command prompt
        name: Use MS Windows 32 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win32

      - if: matrix.os == 'windows-2022'
        # need developer command prompt
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - if: matrix.os == 'windows-2019'
        name: Configure 32 bit
        run: >
          cmake
          -S .
          -B build
          --log-level=DEBUG
          -A Win32
          -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}
          -D GOOGLETEST=ON

      - if: matrix.os == 'windows-2022'
        name: Configure 64 bit
        run: >
          cmake
          -S .
          -B build
          --log-level=DEBUG
          -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}
          -D GOOGLETEST=ON

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - name: Run gtests
        run: |
          cd ./build
          ctest -C ${{matrix.buildtype}} --timeout 5 --verbose
